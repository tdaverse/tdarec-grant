---
title: "Modular, interoperable, and extensible topological data analysis in R"
subtitle: "January Progress Report"
author:
  - name: Jason Cory Brunson
    affiliations:
      - ref: uf
    corresponding: true
  - name: Aymeric Stamm
    affiliations: 
      - ref: lmjl
affiliations:
  - id: lmjl
    name: UMR CNRS 6629, Nantes University, Ecole Centrale de Nantes
    department: Department of Mathematics Jean Leray
    city: Nantes
    country: France
  - id: uf
    name: University of Florida
    department: Laboratory for Systems Medicine, Division of Pulmonary, Critical Care, and Sleep Medicine
    city: Gainesville
    country: United States
date: 2025 January 31
format:
    pdf: default
    html: default
toc: true
number-sections: true
bibliography: ../references.bib
---

## Overview

To recap, the aims of the project are as follows:

**Aim 1:**
Publish a [{recipes}](https://recipes.tidymodels.org) extension for ML vectorizations based on persistent homology.

**Aim 2:**
Publish a [{flipr}](https://lmjl-alea.github.io/flipr/) extension for permutation-based statistical inference on topological data, compatible with Tidymodels workflows.

**Aim 3:**
Refactor [{ripserr}](https://github.com/tdaverse/ripserr/) with a current implementation of Ripser and connect additional options to R.

Development has resumed apace in 2025.

Additionally, the co-investigators met with the Advisory Board and one research assistant on January 31 to discuss progress and invite questions and requests.
Two key needs were highlighted:
* The current and planned dependencies and interoperabilities of TDAverse, Permaverse, and other packages should be better documented, including with a larger diagram in the style of that shown below for a subset.
* A public resource, for example a software journal article or a CRAN Task View, should be written to lay out in one place the available resources for topological data analysis in R.

The co-Investigators will take up these tasks in the coming months.

## Specific Aim 1

Key personnel

: * Jason Cory Brunson (JBR), Assistant Professor of Medicine, University of Florida (UF)

Collaborators

: * Umar Islambekov (UIS), Assistant Professor of Data Science, Bowling Green State University (BGSU)
* Aleksei Luchinsky (ALU), Graduate Research Assistant in Data Science, BGSU

Repositories

: * [{TDAvec}](https://github.com/uislambekov/TDAvec/)
* [{tdarec}](https://github.com/corybrunson/tdarec)

### {TDAvec} upgrade

UIS pushed a new version of {TDAvec} to GitHub, largely in response to needs and requests from JBR or conveyed from colleagues.
All vectorizations described in the proposal are now included, as well as several others.
Additionally, linear algebraic operations have been made more efficient through dependency on {RcppArmadillo}.
JBR will raise several minor issues shortly having to do with the consistency of syntaxt, output, and documentation.

### {tdarec} development

#### code generation

In response to the {TDAvec} upgrade, automatic code generation required minor tweaks but otherwise worked as expected to create new `step_*()` functions.

#### Complete vignette, using Bayesian optimization

As recommended by @motta2019hyperparameter, JBR drafted a vignette using Bayesian optimization to tune model hyperparameters.
This revealed problems with the simultaneous handling of pre-processing and model hyperparameters in the same workflow, which JBR raised as an issue ([#1405](https://github.com/tidymodels/recipes/issues/1405)).
This is not a dealbreaker; if it is not resolved in time, then a simpler vignette will be written and a _nota bene_ included to warn users of the issue.

#### Hyperparameter tuners for simple parameters

A second code generation script is underway to write hyperparameter tuners for most hyperparameters used in {TDAvec}.
The exceptions are `scaleSeq` (the scale sequence) and its likenesses used to define 1- and 2-dimensional discretization grids.
JBR and UIS discussed how best to enable users to tune this grid without overcomplicating the process.
The plan for the coming month is to expose a single tuning parameter: the length (number of cells) along each axis of the grid.

#### Remaining goals

The following remaining goals, detailed in previous progress reports, are roughly in order of priority:

* Better-documented example in README
* Hyperparameter tuner for scale sequence
* Deployment to multiple PH engines

## Specific Aim 2

Key personnel

: - Manon Simonot (MSI), Statistical Engineer, National Centre for Scientific Research (CNRS)
- Aymeric Stamm (AST), Research Engineer, CNRS

Collaborators

: - Matthieu Carrière (MCA), Research Scientist, DataShape team, Centre Inria d'Université Côte d'Azur
- Bertrand Michel (BMI), Full Professor of Statistics, Ecole Centrale de Nantes
- Alessia Pini (API), Associate Professor of Statistics, Università Cattolica del Sacro Cuore
- Simone Vantini (SVA), Full Professor of Statistics, Politecnico di Milano

Repositories

: - [{flipr}](https://permaverse.github.io/flipr/): The goal of the flipr package is to provide a flexible framework for making inference via permutation. The idea is to promote the permutation framework as an incredibly well-suited tool for inference on complex data. You supply your data, as complex as it might be, in the form of lists in which each entry stores one data point in a representation that suits you and flipr takes care of the permutation magic and provides you with either point estimates or confidence regions or p-value of hypothesis tests.
- [{fdatest}](https://permaverse.github.io/fdatest/): The goal of fdatest is to implement various statistical methods for domain selection in functional data analysis, that is selecting a subset of the domain where the difference between two populations is significant. The package is based on the paper by @abramowicz2023domain and @pini2017interval.
- [{phutil}](https://github.com/tdaverse/phutil): Helper package for the tdaverse and host of the chosen persistent homology representation. Mostly empty at the moment.

The following diagram summarises the designed ecosystem of packages for inferential purposes as a tree of package dependencies:

![](../tdainfer-deps.png)

### [**permaverse**](https://github.com/permaverse)

#### {flipr} development

Issue [#11](https://github.com/permaverse/flipr/issues/11) -- Use {future} for computation instead of {pbapply}.

: After adding {furrr} and {progressr} to {flipr}, the vignette created on this subject has been improved to add computation time comparison between sequential and multisession processing. It allows the user to see the importance of setting parallelization before using {flipr} functions and it shows that parallel processing is set correctly in the package.

ANOVA in {flipr}.

: To add ANOVA and tests on regression coefficients, the data structure used in {flipr} has been changed to a list containing two or three elements. Data given by the user is transformed to respect this new format that is used in all {flipr} functions.
For tests on k samples, the format is (response variable.s, group memberships) and the format will be (response variable, qualitative variables, other variables) for regression. Tests already implemented for one and two sample tests still pass with this new format.

: The ANOVA case has been added into the Plausibility function, it can be used to get a single p-value but not yet to get an entire plausibility function. Tests are currently being done to complete the ANOVA implementation and to make a vignette on this subject.

: Once ANOVA implementation is done, tests on regression coefficients will be added.

#### {fdatest} development

Inference for functional representations of persistence homology in {inphr} will mainly be a by-product of the inferential procedures implemented in the {fdatest} package. This package implements domain-selection for functional data [@abramowicz2023domain;@pini2017interval] which essentially detect on which portion of the domain do curves statistically differ.

Achieved

: - Replace all equals in code with assignment operator `<-`;
- All ITP functions are now deprecated;
- The package has an official website;
- Continuous integration has been added to run `R CMD check` on PRs and pushes to the main branch, as well as to monitor unit testing coverage progress and to automatically update the website when needed;
- A `README` has been added with a minimal usecase;
- The use of `data()` has been removed;
- A GPL-3 license has been added at the moment as other dependencies are GPL-like;
- The package now uses [{cli}](https://cli.r-lib.org) to power nicely displayed messages, warnings and errors to the console.

Remaining goals

: - Remove `\code{}` in favour of markdown syntax in documentation;
- Clarify the API;
- Redo all the documentation with inheritance;
- Implement unit tests;
- Move references to fdatest-package.R file;
- Integrate dependency to {flipr} to handle permutation schemes: that last goal will be done **after** unit tests have been implemented and ANOVA and regression permutation schemes added to {flipr}.

### [**tdaverse**](https://github.com/tdaverse)

#### {phutil} development

The development of {phutil} is on hold until AST meets with MCA, who has extensive expertise in using extended persistence in machine learning pipelines in Python, to discuss how extended persistence is used currently. This should help take a better informed decision on which R structure would best host persistence homology information.

## Specific Aim 3

Key personnel

: * Jason Cory Brunson (JBR), Assistant Professor of Medicine, UF
* Kent Phipps (KPH), Undergraduate Research Assistant in Computer and Information Science and Engineering (CISE), UF
* Sean Hershkowitz (SHE), Undergraduate Research Assistant in CISE, UF
* Alice Zhang (AZH), Undergraduate Research Assistant in CISE, UF

Repositories

: * [Ripser fork](https://github.com/strongKs/ripser)
* [{ripserr}](https://github.com/tdaverse/ripserr/)

### {ripserr} upgrade

The prototype upgrade successfully compiles and executes calculations successfully, signaling that the major barriers have been overcome.

That said, development has been slow, in part due to the challenge of coordinating work by all 3 student RAs on the same repo.
In response, the RAs have decided to take a two-pronged approch: (1) KPH and SHE will continue the work of substituting the current Ripser code base into {ripserr}. Meanwhile, (2) AZH is building a {ripserr}-style Rcpp package around Ripser.
We expect that each approach will have its own benefits and drawbacks, which will inform our decisions and documentation.
Upon completion, the two prototypes will be used to validate each other before (1) is finalized for release.

## References
